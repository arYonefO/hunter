<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Test</title>
        <script type="text/javascript" src="d3/d3.v3.js"></script>
        <style type="text/css">
            div.bar {
                display: inline-block;
                width: 20px;
                height: 100px;   /* We'll override this later */
                background-color: teal;
                margin: 2px;
            }

            .axis path,
            .axis line {
                fill: none;
                stroke: black;
                shape_rendering: crispEdges;
            }

            .axis text {
                font-family: sans-serif;
                font-size: 11px;
            }
        </style>
    </head>
    <body>
        <p>Sooo, everything should be popping up under this.</p>
        <div id="bars"></div>
        <div id="scatter"></div>
        <script type="text/javascript">
            var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13, 11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];
            var w = 700;
            var h = 200;
            var barPadding = 1;

            var svg = d3.select('#bars')
            .append("svg")
            .attr("width", w)
            .attr('height', h);

            svg.selectAll("rect")
            .data(dataset)
            .enter()
            .append("rect")
            .attr("x", function(d,i){
                return i * (w / dataset.length);
            })
            .attr("y", function(d){
                return (h - (d * 4));
            })
            .attr("height", function(d){
                return d * 4;
            })
            .attr("width", w / dataset.length - barPadding)
            .attr("fill", function(d){
                return "rgb(0," + (d*8) + ",0)";
            });

            svg.selectAll('text')
            .data(dataset)
            .enter()
            .append('text')
            .text(function(d){
                return d;
            })
            .attr("x", function(d,i){
                return i * (w/dataset.length) + (w / dataset.length - barPadding) / 2;
            })
            .attr("y", function(d){
                return h - (d * 4) + 14
            })
            .attr("font-family", "sans-serif")
            .attr('font-size', "11px")
            .attr("fill", "white")
            .attr("text-anchor", "middle");

            var dataset2 = [];
            var numDataPoints = 35
            var xRange = Math.random() * 800
            var yRange = Math.random() * 800
            for (var i = 0; i < numDataPoints; i++){
                var newNumber1 = Math.round(Math.random() * xRange)
                var newNumber2 = Math.round(Math.random() * yRange)
                dataset2.push([newNumber1,newNumber2])
            }

            var padding = 30

            var xScale = d3.scale.linear()
                .domain([0, d3.max(dataset2, function(d){  return d[0] } )])
                .range([padding, w - padding * 2])

            var yScale = d3.scale.linear()
                .domain([0, d3.max(dataset2, function(d) { return d[1] } )])
                .range([h - padding, padding])

            var rScale = d3.scale.linear()
                .domain([0, d3.max(dataset2, function(d) { return d[1] } )])
                .range([2,5])


            var svg2 = d3.select('#scatter')
            .append("svg")
            .attr("width", w)
            .attr('height', h);

            svg2.selectAll('circles')
            .data(dataset2)
            .enter()
            .append("circle")

            .attr("cx", function(d){
                return xScale(d[0]);
            })
            .attr("cy", function(d){
                return yScale(d[1])
            })
            .attr("r", function(d){
                return rScale(d[1]);
            })
            // svg2.selectAll('text')
            // .data(dataset2)
            // .enter()
            // .append('text')
            // .text(function(d){
            //     return d[0] + "," + d[1];
            // })
            // .attr("x", function(d){
            //     return xScale(d[0])
            // })
            // .attr('y', function(d){
            //     return yScale(d[1])
            // })
            // .attr("font-family", "sans-serif")
            // .attr("font-size", "11px")
            // .attr("fill", "red")

            var xAxis = d3.svg.axis()
            .scale(xScale)
            .orient("bottom")
            .ticks(5)

            svg2.append('g')
            .attr('class', 'axis')
            .attr("transform", "translate(0," + (h - padding) + ")")
            .call(xAxis)

            var yAxis = d3.svg.axis()
            .scale(yScale)
            .orient("left")
            .ticks(5)

            svg2.append("g")
            .attr("class", "axis")
            .attr("transform", "translate("+ padding + ",0)")
            .call(yAxis)





            // var circles = svg.selectAll('circle')
            //                  .data(dataset)
            //                  .enter()
            //                  .append('circle');

            //     circles.attr("cx", function(d, i) {
            //      return (i * 50) + 25;
            //       })
            //         .attr("cy", h/2)
            //         .attr("r", function(d){
            //                 return d;
            //             })
            // .attr("fill", "yellow")
            // .attr("stroke", "orange")
            // .attr("stroke-width", function(d){
            //     return d/2;
            // });
        </script>
    </body>
</html>