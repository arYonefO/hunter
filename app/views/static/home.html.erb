<h1>Leche Asada</h1>

<div id="controls"></div>
    <div id="map"></div>
    <script type="text/javascript">

// Create the Google Map…
var map = new google.maps.Map(d3.select("#map").node(), {
  zoom: 14,
  center: new google.maps.LatLng(-37.814107, 144.96328),
  mapTypeId: google.maps.MapTypeId.ROADMAP
});

var J = (function(){
  // internal functions to grab data from the json structure
  var _link = function(j) { return j.url; };
  var _lat = function(j) { return j.latitude; };
  var _long = function(j) { return j.longitude; };
  var _likes = function(j) { return j.likes; };
  var _created = function(j) { return j.posted_at; };
  var _thumbnail = function(j) { return j.thumbnail; };

  // public interface
  var f = {};

  f.link      = _link;
  f.lat       = _lat;
  f.long      = _long;
  f.likes     = _likes;
  f.created   = _created;
  f.thumbnail = _thumbnail;

  return f;
}());
// end of helper function to massage json data for d3
////////////////////////////////////////////////////////

d3.json("http://obscure-hollows-9858.herokuapp.com/feed", function(data) {
  console.log(data)
  var overlay = new google.maps.OverlayView();

  // Add the container when the overlay is added to the map.
  overlay.onAdd = function() {
    // clicking on images was a real pain.  chaning to overlayMouseTarget did it
    // https://groups.google.com/forum/#!topic/d3-js/eYnbIcfwhvw
    var layer = d3.select(this.getPanes().overlayMouseTarget).append("div")
        .attr("class", "graffiti");
        // Draw each marker as a separate SVG element.
    // We could use a single SVG, but what size would it have?
    overlay.draw = function() {
      var projection = this.getProjection(),
          padding = 10;

      var marker = layer.selectAll("svg")
          .data(data)
          .each(transformMarker) // update existing markers
        .enter().append("svg:svg")
          .each(transformMarker)
          .attr("class", "marker");

      // Add a circle.
      marker.append("svg:circle")
          // .attr("r", function(d) {
          //    var size = d3.scale.linear()
          //     .domain([0, 200])
          //     .range([3, 10]);
          //     return size(J.likes(d));
          // })
          // .attr('fill', function(d){
          //    var color = d3.scale.linear()
          //     .domain([0, 200])
          //     .range(["red", "white"]);
          //     return color(J.likes(d));
          // })
          .attr("r", 4)
          .attr('fill', 'red')
          .attr("cx", padding)
          .attr("cy", padding);

      // Add a label.
      // marker.append("svg:text")
      //     .attr("x", padding + 7)
      //     .attr("y", padding)
      //     .attr("dy", ".34em")
      //     .text(function(d) { return d.key; })
      //     .style("opacity", 0);

      // marker.append("svg:image")
      //     .each(transformImage)
      //     .attr("xlink:href", function(d) {return J.thumbnail(d);})
      //     .attr("width", 0)
      //     .attr("height", 0)
      //     .style("opacity", 1)
      //     .style("left", "100px")
      //     .style("top", "100px");

      function transformMarker(d) {
        // debugger
        d = new google.maps.LatLng(J.lat(d), J.long(d));
        d = projection.fromLatLngToDivPixel(d);
        return d3.select(this)
            .style("left", (d.x - padding) + "px")
            .style("top", (d.y - padding) + "px");
      }

      // function transformImage(d) {
      //   d = new google.maps.LatLng(J.lat(d), J.long(d));
      //   d = projection.fromLatLngToDivPixel(d);
      //   return d3.select(this)
      //       .attr("x", 15)
      //       .attr("y", 15);
      // }

      // show labels if zoom is greater than 10 (ie. street level)
      console.log(map.zoom);
      if (map.zoom >= 10) {
          layer.selectAll("svg")
            .style('width', map.zoom * 15)
            .style('height', map.zoom * 15)

          layer.selectAll("svg").selectAll("text")
            .style('padding-right', '100px')
            .style("opacity", 1);

          layer.selectAll("svg").selectAll("image")
            .style("opacity", 1)
            .transition()
            .duration(500)
            .ease('bounce', 0.1)
            .attr('width', map.zoom * 15)
            .attr('height', map.zoom * 15);

      } else {

          layer.selectAll("svg")
            .style('width', "20px")
            .style('height', "20px");

          layer.selectAll("svg").selectAll("text")
            .style("opacity", 0);

          layer.selectAll("svg").selectAll("image")
            .style("opacity", 0);
      }

      layer.selectAll("svg").selectAll("image")
        .on("click", function(d,i) { window.open(J.link(d));});
    };
  };


  // Bind our overlay to the map…
  overlay.setMap(map);

  // we can change map settings after we look at the data as well
  //
  // var new_center = new google.maps.LatLng(34.0838455, -118.3586526);
  // map.center = new_center;
  // map.zoom = 12;
  // overlay.setMap(map);
});

</script>